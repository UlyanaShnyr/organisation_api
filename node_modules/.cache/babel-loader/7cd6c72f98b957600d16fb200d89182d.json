{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TestReactAPI\\\\github-api\\\\src\\\\components\\\\organisation\\\\Organisations.js\";\nimport React, { Component } from \"react\";\nimport OrganisationList from \"./OrganisationList\";\n\nclass Organisations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      companyname: null,\n      id: null,\n      url: null,\n      avatar_url: null,\n      description: null,\n      name: null,\n      location: null,\n      email: null,\n      public_repos: null,\n      followers: null,\n      following: null,\n      created_at: null,\n      updated_at: null\n    };\n  }\n\n  getCompany(companyname) {\n    return fetch(\"https://api.github.com/orgs/\".concat(companyname)).then(response => response.json()).then(response => {\n      console.log(response);\n      return response;\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    let company = await this.getCompany(this.refs.companyname.value);\n    this.setState({\n      companyname: company.login,\n      id: company.id,\n      url: company.url,\n      avatar_url: company.avatar_url,\n      name: company.name,\n      location: company.location,\n      email: company.email,\n      description: company.description,\n      followers: company.followers,\n      following: company.following,\n      created_at: company.created_at,\n      updated_at: company.updated_at\n    });\n  }\n\n  render() {\n    let company;\n\n    if (this.state.companyname) {\n      company = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"avatar\",\n        src: this.state.avatar_url,\n        width: \"200px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"company: \" + this.state.name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), \"id: \" + this.state.id, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), \"location: \" + this.state.location, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), \"email: \" + this.state.email, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), \"description: \" + this.state.description, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), \"followers: \" + this.state.followers, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), \"following: \" + this.state.following, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), \"created_at: \" + this.state.created_at, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \"updated_at: \" + this.state.updated_at, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      ref: \"companyname\",\n      type: \"text\",\n      placeholder: \"companyname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-secondary\",\n      onClick: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Search\"))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, company)), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(OrganisationList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Organisations;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\TestReactAPI\\github-api\\src\\components\\organisation\\Organisations.js"],"names":["React","Component","OrganisationList","Organisations","constructor","props","state","posts","companyname","id","url","avatar_url","description","name","location","email","public_repos","followers","following","created_at","updated_at","getCompany","fetch","then","response","json","console","log","handleSubmit","e","preventDefault","company","refs","value","setState","login","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport OrganisationList from \"./OrganisationList\";\r\n\r\nclass Organisations extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      companyname: null,\r\n      id: null,\r\n      url: null,\r\n      avatar_url: null,\r\n      description: null,\r\n      name: null,\r\n      location: null,\r\n      email: null,\r\n      public_repos: null,\r\n      followers: null,\r\n      following: null,\r\n      created_at: null,\r\n      updated_at: null\r\n    }\r\n  }\r\n\r\n  getCompany(companyname) {\r\n    return fetch(`https://api.github.com/orgs/${companyname}`)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        console.log(response);\r\n        return response;\r\n      })\r\n  }\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    let company = await this.getCompany(this.refs.companyname.value);\r\n    this.setState({\r\n      companyname: company.login,\r\n      id: company.id,\r\n      url: company.url,\r\n      avatar_url: company.avatar_url,\r\n      name: company.name,\r\n      location: company.location,\r\n      email: company.email,\r\n      description: company.description,\r\n      followers: company.followers,\r\n      following: company.following,\r\n      created_at: company.created_at,\r\n      updated_at: company.updated_at\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let company;\r\n    if (this.state.companyname) {\r\n\r\n      company =\r\n        <div>\r\n          <img alt=\"avatar\" src={this.state.avatar_url} width='200px' />\r\n          <p>\r\n            {\"company: \" + this.state.name}<br />\r\n            {\"id: \" + this.state.id}<br />\r\n            {\"location: \" + this.state.location}<br />\r\n            {\"email: \" + this.state.email}<br />\r\n            {\"description: \" + this.state.description}<br />\r\n            {\"followers: \" + this.state.followers}<br />\r\n            {\"following: \" + this.state.following}<br />\r\n            {\"created_at: \" + this.state.created_at}<br />\r\n            {\"updated_at: \" + this.state.updated_at}<br />\r\n          </p>\r\n        </div>\r\n        \r\n    }\r\n\r\n    return (\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <form className=\"input-group mb-3\">\r\n              <input className=\"form-control\" ref='companyname' type='text' placeholder='companyname'></input>\r\n              <div className=\"input-group-append\">\r\n                <button className=\"btn btn-outline-secondary\" onClick={e => this.handleSubmit(e)} >Search</button>\r\n              </div>\r\n            </form>\r\n            <p>{company}</p>\r\n          </div>\r\n          <div className=\"col-10\">\r\n\r\n            <OrganisationList />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Organisations;"]},"metadata":{},"sourceType":"module"}