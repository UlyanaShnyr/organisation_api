{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TestReactAPI\\\\github-api\\\\src\\\\components\\\\Organisations.js\";\nimport React, { Component } from \"react\";\n\nclass Organisations extends Component {\n  constructor() {\n    super();\n    this.state = {\n      companyname: null,\n      id: null,\n      url: null,\n      avatar_url: null,\n      description: null,\n      name: null,\n      location: null,\n      email: null,\n      public_repos: null,\n      followers: null,\n      following: null,\n      created_at: null,\n      updated_at: null\n    };\n  }\n\n  getCompany(companyname) {\n    return fetch(\"https://api.github.com/orgs/\".concat(companyname)).then(response => response.json()).then(response => {\n      console.log(response);\n      return response;\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    let company = await this.getCompany(this.refs.companyname.value);\n    this.setState({\n      companyname: company.login,\n      id: company.id,\n      url: company.url,\n      avatar_url: company.avatar_url,\n      name: company.name,\n      location: company.location,\n      email: company.email,\n      description: company.description,\n      followers: company.followers,\n      following: company.following,\n      created_at: company.created_at,\n      updated_at: company.updated_at\n    });\n  }\n\n  render() {\n    let company; // if(this.state.companyname){\n    //     company=  \n    //   <div>\n    //      <img alt=\"avatar\" src={this.state.avatar_url} width='200px'/>\n    //     <p>\n    //     {\"company: \"+this.state.name}<br/>\n    //     {\"id: \"+this.state.id}<br/>\n    //     {\"location: \"+this.state.location}<br/>\n    //     {\"email: \"+this.state.email}<br/>\n    //     {\"description: \"+this.state.description}<br/> \n    //     {\"followers: \"+this.state.followers}<br/> \n    //     {\"following: \"+this.state.following}<br/>        \n    //     {\"created_at: \"+this.state.created_at}<br/> \n    //     {\"updated_at: \"+this.state.updated_at}<br/>\n    //     </p>\n    //   </div>\n    // }\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Organisations;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\TestReactAPI\\github-api\\src\\components\\Organisations.js"],"names":["React","Component","Organisations","constructor","state","companyname","id","url","avatar_url","description","name","location","email","public_repos","followers","following","created_at","updated_at","getCompany","fetch","then","response","json","console","log","handleSubmit","e","preventDefault","company","refs","value","setState","login","render","isLoaded"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AACA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW;AAETC,MAAAA,WAAW,EAAC,IAFH;AAGTC,MAAAA,EAAE,EAAC,IAHM;AAITC,MAAAA,GAAG,EAAC,IAJK;AAKTC,MAAAA,UAAU,EAAC,IALF;AAMTC,MAAAA,WAAW,EAAC,IANH;AAORC,MAAAA,IAAI,EAAC,IAPG;AAQRC,MAAAA,QAAQ,EAAC,IARD;AASTC,MAAAA,KAAK,EAAC,IATG;AAUTC,MAAAA,YAAY,EAAC,IAVJ;AAWTC,MAAAA,SAAS,EAAC,IAXD;AAYTC,MAAAA,SAAS,EAAC,IAZD;AAaTC,MAAAA,UAAU,EAAC,IAbF;AAcTC,MAAAA,UAAU,EAAC;AAdF,KAAX;AAgBD;;AAEDC,EAAAA,UAAU,CAAEb,WAAF,EAAc;AACtB,WAAOc,KAAK,uCAAgCd,WAAhC,EAAL,CACNe,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENF,IAFM,CAEDC,QAAQ,IAAI;AAChBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,aAAOA,QAAP;AACD,KALM,CAAP;AAMD;;AACF,QAAMI,YAAN,CAAmBC,CAAnB,EAAqB;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,OAAO,GAAG,MAAM,KAAKV,UAAL,CAAgB,KAAKW,IAAL,CAAUxB,WAAV,CAAsByB,KAAtC,CAApB;AACA,SAAKC,QAAL,CAAc;AACZ1B,MAAAA,WAAW,EAACuB,OAAO,CAACI,KADR;AAEZ1B,MAAAA,EAAE,EAACsB,OAAO,CAACtB,EAFC;AAGZC,MAAAA,GAAG,EAACqB,OAAO,CAACrB,GAHA;AAIZC,MAAAA,UAAU,EAAEoB,OAAO,CAACpB,UAJR;AAKZE,MAAAA,IAAI,EAACkB,OAAO,CAAClB,IALD;AAMZC,MAAAA,QAAQ,EAACiB,OAAO,CAACjB,QANL;AAOZC,MAAAA,KAAK,EAACgB,OAAO,CAAChB,KAPF;AAQZH,MAAAA,WAAW,EAACmB,OAAO,CAACnB,WARR;AASZK,MAAAA,SAAS,EAACc,OAAO,CAACd,SATN;AAUZC,MAAAA,SAAS,EAACa,OAAO,CAACb,SAVN;AAWZC,MAAAA,UAAU,EAACY,OAAO,CAACZ,UAXP;AAYZC,MAAAA,UAAU,EAACW,OAAO,CAACX;AAZP,KAAd;AAeD;;AACPgB,EAAAA,MAAM,GAAE;AACJ,QAAIL,OAAJ,CADI,CAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,QAAG,CAACM,QAAJ,EAAa;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAGI;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAUH;AAEA;;AApFiC;;AAyFtC,eAAehC,aAAf","sourcesContent":["import React, {Component} from \"react\";\r\nclass Organisations extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n          \r\n          companyname:null,\r\n          id:null,\r\n          url:null,\r\n          avatar_url:null,\r\n          description:null,\r\n           name:null,\r\n           location:null,\r\n          email:null,\r\n          public_repos:null,\r\n          followers:null,\r\n          following:null,\r\n          created_at:null,\r\n          updated_at:null\r\n        }\r\n      }\r\n      \r\n      getCompany (companyname){\r\n        return fetch(`https://api.github.com/orgs/${companyname}`)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          console.log(response);\r\n          return response;\r\n        })\r\n      }\r\n     async handleSubmit(e){\r\n        e.preventDefault();\r\n        let company = await this.getCompany(this.refs.companyname.value);\r\n        this.setState({        \r\n          companyname:company.login,\r\n          id:company.id,\r\n          url:company.url,\r\n          avatar_url: company.avatar_url,\r\n          name:company.name,\r\n          location:company.location,\r\n          email:company.email,         \r\n          description:company.description,\r\n          followers:company.followers,\r\n          following:company.following, \r\n          created_at:company.created_at,\r\n          updated_at:company.updated_at          \r\n    \r\n        })\r\n      }\r\nrender(){\r\n    let company;\r\n    // if(this.state.companyname){\r\n    //     company=  \r\n    //   <div>\r\n    //      <img alt=\"avatar\" src={this.state.avatar_url} width='200px'/>\r\n    //     <p>\r\n    //     {\"company: \"+this.state.name}<br/>\r\n    //     {\"id: \"+this.state.id}<br/>\r\n    //     {\"location: \"+this.state.location}<br/>\r\n    //     {\"email: \"+this.state.email}<br/>\r\n    //     {\"description: \"+this.state.description}<br/> \r\n    //     {\"followers: \"+this.state.followers}<br/> \r\n    //     {\"following: \"+this.state.following}<br/>        \r\n    //     {\"created_at: \"+this.state.created_at}<br/> \r\n    //     {\"updated_at: \"+this.state.updated_at}<br/>\r\n    //     </p>\r\n       \r\n    //   </div>\r\n    // }\r\n    if(!isLoaded){\r\n        return <div>Loading...</div>\r\n    }\r\n    else{\r\n        return( \r\n            <div>\r\n            {/* <form>\r\n                <input ref='companyname' type='text' placeholder='companyname'></input>\r\n                <button onClick={e => this.handleSubmit(e)} >Search</button>\r\n           </form>\r\n           <p>{company}</p>  */}\r\n        \r\n            </div>     \r\n            )\r\n    }\r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Organisations;"]},"metadata":{},"sourceType":"module"}