{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TestReactAPI\\\\github-api\\\\src\\\\components\\\\layout\\\\Organisations.js\";\nimport React, { Component } from \"react\";\nimport OrganisationList from \"../organisation/OrganisationList\";\n\nclass Organisations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      companyname: null,\n      id: null,\n      url: null,\n      avatar_url: null,\n      description: null,\n      name: null,\n      location: null,\n      email: null,\n      public_repos: null,\n      followers: null,\n      following: null,\n      created_at: null,\n      updated_at: null\n    };\n  } //   componentDidMount(){\n  //     fetch(`https://api.github.com/organizations`)\n  //     .then(res=>res.json())\n  //     .then(data=>this.setState({posts:data}))\n  //   }\n\n\n  getCompany(companyname) {\n    return fetch(\"https://api.github.com/orgs/\".concat(companyname)).then(response => response.json()).then(response => {\n      console.log(response);\n      return response;\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    let company = await this.getCompany(this.refs.companyname.value);\n    this.setState({\n      companyname: company.login,\n      id: company.id,\n      url: company.url,\n      avatar_url: company.avatar_url,\n      name: company.name,\n      location: company.location,\n      email: company.email,\n      description: company.description,\n      followers: company.followers,\n      following: company.following,\n      created_at: company.created_at,\n      updated_at: company.updated_at\n    });\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    let company;\n\n    if (this.state.companyname) {\n      company = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"avatar\",\n        src: this.state.avatar_url,\n        width: \"200px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"company: \" + this.state.name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), \"id: \" + this.state.id, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), \"location: \" + this.state.location, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), \"email: \" + this.state.email, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \"description: \" + this.state.description, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \"followers: \" + this.state.followers, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), \"following: \" + this.state.following, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), \"created_at: \" + this.state.created_at, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), \"updated_at: \" + this.state.updated_at, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: \"companyname\",\n      type: \"text\",\n      placeholder: \"companyname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, company)), React.createElement(\"div\", {\n      class: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(OrganisationList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })))) // <div>\n    //     {\n    //         this.state.posts.map((post)=>{\n    //             return <div key={post.id}>\n    //                 <p>{post.login}</p>\n    //                 <p>{post.id}</p>\n    //             </div>\n    //         })\n    //     }\n    // </div>\n    ;\n  }\n\n}\n\nexport default Organisations;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\TestReactAPI\\github-api\\src\\components\\layout\\Organisations.js"],"names":["React","Component","OrganisationList","Organisations","constructor","props","state","posts","companyname","id","url","avatar_url","description","name","location","email","public_repos","followers","following","created_at","updated_at","getCompany","fetch","then","response","json","console","log","handleSubmit","e","preventDefault","company","refs","value","setState","login","render","match","params"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport OrganisationList from \"../organisation/OrganisationList\";\r\n\r\nclass Organisations extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n          posts:[],\r\n          companyname:null,\r\n          id:null,\r\n          url:null,\r\n          avatar_url:null,\r\n          description:null,\r\n           name:null,\r\n           location:null,\r\n          email:null,\r\n          public_repos:null,\r\n          followers:null,\r\n          following:null,\r\n          created_at:null,\r\n          updated_at:null\r\n        }\r\n      }\r\n    //   componentDidMount(){\r\n    //     fetch(`https://api.github.com/organizations`)\r\n    //     .then(res=>res.json())\r\n    //     .then(data=>this.setState({posts:data}))\r\n    //   }\r\n      \r\n      getCompany (companyname){\r\n        return fetch(`https://api.github.com/orgs/${companyname}`)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          console.log(response);\r\n          return response;\r\n        })\r\n      }\r\n     async handleSubmit(e){\r\n        e.preventDefault(); \r\n        let company = await this.getCompany(this.refs.companyname.value);\r\n        this.setState({        \r\n          companyname:company.login,\r\n          id:company.id,\r\n          url:company.url,\r\n          avatar_url: company.avatar_url,\r\n          name:company.name,\r\n          location:company.location,\r\n          email:company.email,         \r\n          description:company.description,\r\n          followers:company.followers,\r\n          following:company.following, \r\n          created_at:company.created_at,\r\n          updated_at:company.updated_at          \r\n    \r\n        })\r\n      }\r\nrender(){\r\n    const id=this.props.match.params.id;\r\n    let company;\r\n    if(this.state.companyname){\r\n        company=  \r\n      <div>\r\n         <img alt=\"avatar\" src={this.state.avatar_url} width='200px'/>\r\n        <p>\r\n        {\"company: \"+this.state.name}<br/>\r\n        {\"id: \"+this.state.id}<br/>\r\n        {\"location: \"+this.state.location}<br/>\r\n        {\"email: \"+this.state.email}<br/>\r\n        {\"description: \"+this.state.description}<br/> \r\n        {\"followers: \"+this.state.followers}<br/> \r\n        {\"following: \"+this.state.following}<br/>        \r\n        {\"created_at: \"+this.state.created_at}<br/> \r\n        {\"updated_at: \"+this.state.updated_at}<br/>\r\n        </p>  \r\n            \r\n      </div>\r\n    }\r\n    \r\n        return(         \r\n             \r\n             <div class=\"container\">\r\n             <div class=\"row\">\r\n               <div class=\"col-2\">\r\n               <form>\r\n                <input ref='companyname' type='text' placeholder='companyname'></input>\r\n                <button onClick={e => this.handleSubmit(e)} >Search</button>               \r\n           </form>\r\n           <p>{company}</p> \r\n               </div>\r\n               <div class=\"col-10\">\r\n               <OrganisationList/>\r\n               </div>\r\n               \r\n             </div>\r\n           </div>\r\n\r\n        // <div>\r\n        //     {\r\n        //         this.state.posts.map((post)=>{\r\n        //             return <div key={post.id}>\r\n        //                 <p>{post.login}</p>\r\n        //                 <p>{post.id}</p>\r\n        //             </div>\r\n        //         })\r\n        //     }\r\n        // </div>\r\n            )\r\n    \r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Organisations;"]},"metadata":{},"sourceType":"module"}