{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TestReactAPI\\\\github-api\\\\src\\\\components\\\\Organisations.js\";\nimport React, { Component } from \"react\";\n\nclass Organisations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      companyname: null,\n      id: null,\n      url: null,\n      avatar_url: null,\n      description: null,\n      name: null,\n      location: null,\n      email: null,\n      public_repos: null,\n      followers: null,\n      following: null,\n      created_at: null,\n      updated_at: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.github.com/orgs/\".concat(companyname)).then(response => response.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  getCompany(companyname) {\n    return fetch(\"https://api.github.com/orgs/\".concat(companyname)).then(response => response.json()).then(response => {\n      console.log(response);\n      return response;\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    let company = await this.getCompany(this.refs.companyname.value);\n    this.setState({\n      companyname: company.login,\n      id: company.id,\n      url: company.url,\n      avatar_url: company.avatar_url,\n      name: company.name,\n      location: company.location,\n      email: company.email,\n      description: company.description,\n      followers: company.followers,\n      following: company.following,\n      created_at: company.created_at,\n      updated_at: company.updated_at\n    });\n  }\n\n  render() {\n    let company;\n    let _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (this.state.companyname) {\n      company = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"avatar\",\n        src: this.state.avatar_url,\n        width: \"200px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"company: \" + this.state.name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \"id: \" + this.state.id, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \"location: \" + this.state.location, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), \"email: \" + this.state.email, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), \"description: \" + this.state.description, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), \"followers: \" + this.state.followers, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), \"following: \" + this.state.following, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), \"created_at: \" + this.state.created_at, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \"updated_at: \" + this.state.updated_at, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: \"companyname\",\n      type: \"text\",\n      placeholder: \"companyname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, company));\n  }\n\n}\n\nexport default Organisations;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\TestReactAPI\\github-api\\src\\components\\Organisations.js"],"names":["React","Component","Organisations","constructor","props","state","items","isLoaded","companyname","id","url","avatar_url","description","name","location","email","public_repos","followers","following","created_at","updated_at","componentDidMount","fetch","then","response","json","setState","getCompany","console","log","handleSubmit","e","preventDefault","company","refs","value","login","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AACA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC,EADC;AAEPC,MAAAA,QAAQ,EAAC,KAFF;AAGTC,MAAAA,WAAW,EAAC,IAHH;AAITC,MAAAA,EAAE,EAAC,IAJM;AAKTC,MAAAA,GAAG,EAAC,IALK;AAMTC,MAAAA,UAAU,EAAC,IANF;AAOTC,MAAAA,WAAW,EAAC,IAPH;AAQRC,MAAAA,IAAI,EAAC,IARG;AASRC,MAAAA,QAAQ,EAAC,IATD;AAUTC,MAAAA,KAAK,EAAC,IAVG;AAWTC,MAAAA,YAAY,EAAC,IAXJ;AAYTC,MAAAA,SAAS,EAAC,IAZD;AAaTC,MAAAA,SAAS,EAAC,IAbD;AAcTC,MAAAA,UAAU,EAAC,IAdF;AAeTC,MAAAA,UAAU,EAAC;AAfF,KAAX;AAiBD;;AACDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,uCAAgCd,WAAhC,EAAL,CACCe,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACVnB,QAAAA,QAAQ,EAAC,IADC;AAEVD,QAAAA,KAAK,EAACmB;AAFI,OAAd;AAID,KAPD;AAQH;;AACDE,EAAAA,UAAU,CAAEnB,WAAF,EAAc;AACtB,WAAOc,KAAK,uCAAgCd,WAAhC,EAAL,CACNe,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENF,IAFM,CAEDC,QAAQ,IAAI;AAChBI,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,aAAOA,QAAP;AACD,KALM,CAAP;AAMD;;AACF,QAAMM,YAAN,CAAmBC,CAAnB,EAAqB;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,OAAO,GAAG,MAAM,KAAKN,UAAL,CAAgB,KAAKO,IAAL,CAAU1B,WAAV,CAAsB2B,KAAtC,CAApB;AACA,SAAKT,QAAL,CAAc;AACZlB,MAAAA,WAAW,EAACyB,OAAO,CAACG,KADR;AAEZ3B,MAAAA,EAAE,EAACwB,OAAO,CAACxB,EAFC;AAGZC,MAAAA,GAAG,EAACuB,OAAO,CAACvB,GAHA;AAIZC,MAAAA,UAAU,EAAEsB,OAAO,CAACtB,UAJR;AAKZE,MAAAA,IAAI,EAACoB,OAAO,CAACpB,IALD;AAMZC,MAAAA,QAAQ,EAACmB,OAAO,CAACnB,QANL;AAOZC,MAAAA,KAAK,EAACkB,OAAO,CAAClB,KAPF;AAQZH,MAAAA,WAAW,EAACqB,OAAO,CAACrB,WARR;AASZK,MAAAA,SAAS,EAACgB,OAAO,CAAChB,SATN;AAUZC,MAAAA,SAAS,EAACe,OAAO,CAACf,SAVN;AAWZC,MAAAA,UAAU,EAACc,OAAO,CAACd,UAXP;AAYZC,MAAAA,UAAU,EAACa,OAAO,CAACb;AAZP,KAAd;AAeD;;AACPiB,EAAAA,MAAM,GAAE;AACJ,QAAIJ,OAAJ;AADI,sBAEiB,KAAK5B,KAFtB;AAAA,QAEAE,QAFA,eAEAA,QAFA;AAAA,QAEUD,KAFV,eAEUA,KAFV;;AAGJ,QAAG,KAAKD,KAAL,CAAWG,WAAd,EAA0B;AACtByB,MAAAA,OAAO,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,GAAG,EAAC,QAAT;AAAkB,QAAA,GAAG,EAAE,KAAK5B,KAAL,CAAWM,UAAlC;AAA8C,QAAA,KAAK,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,cAAY,KAAKN,KAAL,CAAWQ,IADxB,EAC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD7B,EAEC,SAAO,KAAKR,KAAL,CAAWI,EAFnB,EAEsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFtB,EAGC,eAAa,KAAKJ,KAAL,CAAWS,QAHzB,EAGkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHlC,EAIC,YAAU,KAAKT,KAAL,CAAWU,KAJtB,EAI4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJ5B,EAKC,kBAAgB,KAAKV,KAAL,CAAWO,WAL5B,EAKwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALxC,EAMC,gBAAc,KAAKP,KAAL,CAAWY,SAN1B,EAMoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANpC,EAOC,gBAAc,KAAKZ,KAAL,CAAWa,SAP1B,EAOoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPpC,EAQC,iBAAe,KAAKb,KAAL,CAAWc,UAR3B,EAQsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARtC,EASC,iBAAe,KAAKd,KAAL,CAAWe,UAT3B,EASsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATtC,CAFF,CADE;AAgBH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,GAAG,EAAC,aAAX;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,WAAW,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAEW,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADA,EAKD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIE,OAAJ,CALC,CADJ;AASC;;AAzFiC;;AA8FtC,eAAe/B,aAAf","sourcesContent":["import React, {Component} from \"react\";\r\nclass Organisations extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            items:[],\r\n            isLoaded:false,\r\n          companyname:null,\r\n          id:null,\r\n          url:null,\r\n          avatar_url:null,\r\n          description:null,\r\n           name:null,\r\n           location:null,\r\n          email:null,\r\n          public_repos:null,\r\n          followers:null,\r\n          following:null,\r\n          created_at:null,\r\n          updated_at:null\r\n        }\r\n      }\r\n      componentDidMount(){\r\n          fetch(`https://api.github.com/orgs/${companyname}`)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            this.setState({\r\n                isLoaded:true,\r\n                items:json,\r\n            })\r\n          })\r\n      }\r\n      getCompany (companyname){\r\n        return fetch(`https://api.github.com/orgs/${companyname}`)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          console.log(response);\r\n          return response;\r\n        })\r\n      }\r\n     async handleSubmit(e){\r\n        e.preventDefault();\r\n        let company = await this.getCompany(this.refs.companyname.value);\r\n        this.setState({\r\n          companyname:company.login,\r\n          id:company.id,\r\n          url:company.url,\r\n          avatar_url: company.avatar_url,\r\n          name:company.name,\r\n          location:company.location,\r\n          email:company.email,         \r\n          description:company.description,\r\n          followers:company.followers,\r\n          following:company.following, \r\n          created_at:company.created_at,\r\n          updated_at:company.updated_at          \r\n    \r\n        })\r\n      }\r\nrender(){\r\n    let company;\r\n    let{isLoaded, items}=this.state;\r\n    if(this.state.companyname){\r\n        company=  \r\n      <div>\r\n         <img alt=\"avatar\" src={this.state.avatar_url} width='200px'/>\r\n        <p>\r\n        {\"company: \"+this.state.name}<br/>\r\n        {\"id: \"+this.state.id}<br/>\r\n        {\"location: \"+this.state.location}<br/>\r\n        {\"email: \"+this.state.email}<br/>\r\n        {\"description: \"+this.state.description}<br/> \r\n        {\"followers: \"+this.state.followers}<br/> \r\n        {\"following: \"+this.state.following}<br/>        \r\n        {\"created_at: \"+this.state.created_at}<br/> \r\n        {\"updated_at: \"+this.state.updated_at}<br/>\r\n        </p>\r\n       \r\n      </div>\r\n    }\r\n    \r\n    return( \r\n        <div>\r\n        <form>\r\n            <input ref='companyname' type='text' placeholder='companyname'></input>\r\n            <button onClick={e => this.handleSubmit(e)} >Search</button>\r\n       </form>\r\n       <p>{company}</p> \r\n        </div>     \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Organisations;"]},"metadata":{},"sourceType":"module"}