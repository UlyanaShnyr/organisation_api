{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TestReactAPI\\\\github-api\\\\src\\\\components\\\\Organisations.js\";\nimport React, { Component } from \"react\";\n\nclass Organisations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [] //   companyname:null,\n      //   id:null,\n      //   url:null,\n      //   avatar_url:null,\n      //   description:null,\n      //    name:null,\n      //    location:null,\n      //   email:null,\n      //   public_repos:null,\n      //   followers:null,\n      //   following:null,\n      //   created_at:null,\n      //   updated_at:null\n\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.github.com/organizations\").then(res => res.json()).then(data => this.setState({\n      posts: data\n    }));\n  } //   getCompany (companyname){\n  //     return fetch(`https://api.github.com/orgs/${companyname}`)\n  //     .then(response => response.json())\n  //     .then(response => {\n  //       console.log(response);\n  //       return response;\n  //     })\n  //   }\n  //  async handleSubmit(e){\n  //     e.preventDefault();\n  //     let company = await this.getCompany(this.refs.companyname.value);\n  //     this.setState({        \n  //       companyname:company.login,\n  //       id:company.id,\n  //       url:company.url,\n  //       avatar_url: company.avatar_url,\n  //       name:company.name,\n  //       location:company.location,\n  //       email:company.email,         \n  //       description:company.description,\n  //       followers:company.followers,\n  //       following:company.following, \n  //       created_at:company.created_at,\n  //       updated_at:company.updated_at          \n  //     })\n  //   }\n\n\n  render() {\n    // let company;\n    // if(this.state.companyname){\n    //     company=  \n    //   <div>\n    //      <img alt=\"avatar\" src={this.state.avatar_url} width='200px'/>\n    //     <p>\n    //     {\"company: \"+this.state.name}<br/>\n    //     {\"id: \"+this.state.id}<br/>\n    //     {\"location: \"+this.state.location}<br/>\n    //     {\"email: \"+this.state.email}<br/>\n    //     {\"description: \"+this.state.description}<br/> \n    //     {\"followers: \"+this.state.followers}<br/> \n    //     {\"following: \"+this.state.following}<br/>        \n    //     {\"created_at: \"+this.state.created_at}<br/> \n    //     {\"updated_at: \"+this.state.updated_at}<br/>\n    //     </p>\n    //   </div>\n    // }\n    return (//     <div>\n      //     <form>\n      //         <input ref='companyname' type='text' placeholder='companyname'></input>\n      //         <button onClick={e => this.handleSubmit(e)} >Search</button>\n      //    </form>\n      //    <p>{company}</p>        \n      //     </div>     \n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.posts.map(post => {\n        return React.createElement(\"div\", {\n          key: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, post.id));\n      }))\n    );\n  }\n\n}\n\nexport default Organisations;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\TestReactAPI\\github-api\\src\\components\\Organisations.js"],"names":["React","Component","Organisations","constructor","props","state","posts","componentDidMount","fetch","then","res","json","data","setState","render","map","post","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AACA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAC,EADG,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdW,KAAX;AAgBD;;AACDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,wCAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEMG,IAAI,IAAE,KAAKC,QAAL,CAAc;AAACP,MAAAA,KAAK,EAACM;AAAP,KAAd,CAFZ;AAGD,GAxB+B,CA0BlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACJE,EAAAA,MAAM,GAAE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEI,WACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAsBC,IAAD,IAAQ;AACzB,eAAO;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,IAAI,CAACC,EAAV,CADG,CAAP;AAGH,OAJD,CAFR;AARA;AAoBH;;AA9FiC;;AAmGtC,eAAef,aAAf","sourcesContent":["import React, {Component} from \"react\";\r\nclass Organisations extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n          posts:[],\r\n        //   companyname:null,\r\n        //   id:null,\r\n        //   url:null,\r\n        //   avatar_url:null,\r\n        //   description:null,\r\n        //    name:null,\r\n        //    location:null,\r\n        //   email:null,\r\n        //   public_repos:null,\r\n        //   followers:null,\r\n        //   following:null,\r\n        //   created_at:null,\r\n        //   updated_at:null\r\n        }\r\n      }\r\n      componentDidMount(){\r\n        fetch(`https://api.github.com/organizations`)\r\n        .then(res=>res.json())\r\n        .then(data=>this.setState({posts:data}))\r\n      }\r\n      \r\n    //   getCompany (companyname){\r\n    //     return fetch(`https://api.github.com/orgs/${companyname}`)\r\n    //     .then(response => response.json())\r\n    //     .then(response => {\r\n    //       console.log(response);\r\n    //       return response;\r\n    //     })\r\n    //   }\r\n    //  async handleSubmit(e){\r\n    //     e.preventDefault();\r\n    //     let company = await this.getCompany(this.refs.companyname.value);\r\n    //     this.setState({        \r\n    //       companyname:company.login,\r\n    //       id:company.id,\r\n    //       url:company.url,\r\n    //       avatar_url: company.avatar_url,\r\n    //       name:company.name,\r\n    //       location:company.location,\r\n    //       email:company.email,         \r\n    //       description:company.description,\r\n    //       followers:company.followers,\r\n    //       following:company.following, \r\n    //       created_at:company.created_at,\r\n    //       updated_at:company.updated_at          \r\n    \r\n    //     })\r\n    //   }\r\nrender(){\r\n    // let company;\r\n    // if(this.state.companyname){\r\n    //     company=  \r\n    //   <div>\r\n    //      <img alt=\"avatar\" src={this.state.avatar_url} width='200px'/>\r\n    //     <p>\r\n    //     {\"company: \"+this.state.name}<br/>\r\n    //     {\"id: \"+this.state.id}<br/>\r\n    //     {\"location: \"+this.state.location}<br/>\r\n    //     {\"email: \"+this.state.email}<br/>\r\n    //     {\"description: \"+this.state.description}<br/> \r\n    //     {\"followers: \"+this.state.followers}<br/> \r\n    //     {\"following: \"+this.state.following}<br/>        \r\n    //     {\"created_at: \"+this.state.created_at}<br/> \r\n    //     {\"updated_at: \"+this.state.updated_at}<br/>\r\n    //     </p>\r\n       \r\n    //   </div>\r\n    // }\r\n    \r\n        return( \r\n        //     <div>\r\n        //     <form>\r\n        //         <input ref='companyname' type='text' placeholder='companyname'></input>\r\n        //         <button onClick={e => this.handleSubmit(e)} >Search</button>\r\n        //    </form>\r\n        //    <p>{company}</p>        \r\n        //     </div>     \r\n        <div>\r\n            {\r\n                this.state.posts.map((post)=>{\r\n                    return <div key={post.id}>\r\n                        <h2>{post.id}</h2>\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n            )\r\n    \r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Organisations;"]},"metadata":{},"sourceType":"module"}