{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TestReactAPI\\\\github-api\\\\src\\\\components\\\\Organisations.js\";\nimport React, { Component } from \"react\";\n\nclass Organisations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [] //   companyname:null,\n      //   id:null,\n      //   url:null,\n      //   avatar_url:null,\n      //   description:null,\n      //    name:null,\n      //    location:null,\n      //   email:null,\n      //   public_repos:null,\n      //   followers:null,\n      //   following:null,\n      //   created_at:null,\n      //   updated_at:null\n\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.github.com/organizations\").then(res => res.json()).then(data => this.setState({\n      posts: data\n    }));\n  } //   getCompany (companyname){\n  //     return fetch(`https://api.github.com/orgs/${companyname}`)\n  //     .then(response => response.json())\n  //     .then(response => {\n  //       console.log(response);\n  //       return response;\n  //     })\n  //   }\n  //  async handleSubmit(e){\n  //     e.preventDefault();\n  //     let company = await this.getCompany(this.refs.companyname.value);\n  //     this.setState({        \n  //       companyname:company.login,\n  //       id:company.id,\n  //       url:company.url,\n  //       avatar_url: company.avatar_url,\n  //       name:company.name,\n  //       location:company.location,\n  //       email:company.email,         \n  //       description:company.description,\n  //       followers:company.followers,\n  //       following:company.following, \n  //       created_at:company.created_at,\n  //       updated_at:company.updated_at          \n  //     })\n  //   }\n\n\n  render() {\n    let company;\n\n    if (this.state.companyname) {\n      company = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"avatar\",\n        src: this.state.avatar_url,\n        width: \"200px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"company: \" + this.state.name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), \"id: \" + this.state.id, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), \"location: \" + this.state.location, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), \"email: \" + this.state.email, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), \"description: \" + this.state.description, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), \"followers: \" + this.state.followers, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), \"following: \" + this.state.following, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \"created_at: \" + this.state.created_at, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \"updated_at: \" + this.state.updated_at, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: \"companyname\",\n      type: \"text\",\n      placeholder: \"companyname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, company)) // <div>\n    //     {\n    //         this.state.posts.map((post)=>{\n    //             return <div key={post.id}>\n    //                 <p>{post.login}</p>\n    //                 <p>{post.id}</p>\n    //             </div>\n    //         })\n    //     }\n    // </div>\n    ;\n  }\n\n}\n\nexport default Organisations;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\TestReactAPI\\github-api\\src\\components\\Organisations.js"],"names":["React","Component","Organisations","constructor","props","state","posts","componentDidMount","fetch","then","res","json","data","setState","render","company","companyname","avatar_url","name","id","location","email","description","followers","following","created_at","updated_at","e","handleSubmit"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nclass Organisations extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n          posts:[],\r\n        //   companyname:null,\r\n        //   id:null,\r\n        //   url:null,\r\n        //   avatar_url:null,\r\n        //   description:null,\r\n        //    name:null,\r\n        //    location:null,\r\n        //   email:null,\r\n        //   public_repos:null,\r\n        //   followers:null,\r\n        //   following:null,\r\n        //   created_at:null,\r\n        //   updated_at:null\r\n        }\r\n      }\r\n      componentDidMount(){\r\n        fetch(`https://api.github.com/organizations`)\r\n        .then(res=>res.json())\r\n        .then(data=>this.setState({posts:data}))\r\n      }\r\n      \r\n    //   getCompany (companyname){\r\n    //     return fetch(`https://api.github.com/orgs/${companyname}`)\r\n    //     .then(response => response.json())\r\n    //     .then(response => {\r\n    //       console.log(response);\r\n    //       return response;\r\n    //     })\r\n    //   }\r\n    //  async handleSubmit(e){\r\n    //     e.preventDefault();\r\n    //     let company = await this.getCompany(this.refs.companyname.value);\r\n    //     this.setState({        \r\n    //       companyname:company.login,\r\n    //       id:company.id,\r\n    //       url:company.url,\r\n    //       avatar_url: company.avatar_url,\r\n    //       name:company.name,\r\n    //       location:company.location,\r\n    //       email:company.email,         \r\n    //       description:company.description,\r\n    //       followers:company.followers,\r\n    //       following:company.following, \r\n    //       created_at:company.created_at,\r\n    //       updated_at:company.updated_at          \r\n    \r\n    //     })\r\n    //   }\r\nrender(){\r\n    let company;\r\n    if(this.state.companyname){\r\n        company=  \r\n      <div>\r\n         <img alt=\"avatar\" src={this.state.avatar_url} width='200px'/>\r\n        <p>\r\n        {\"company: \"+this.state.name}<br/>\r\n        {\"id: \"+this.state.id}<br/>\r\n        {\"location: \"+this.state.location}<br/>\r\n        {\"email: \"+this.state.email}<br/>\r\n        {\"description: \"+this.state.description}<br/> \r\n        {\"followers: \"+this.state.followers}<br/> \r\n        {\"following: \"+this.state.following}<br/>        \r\n        {\"created_at: \"+this.state.created_at}<br/> \r\n        {\"updated_at: \"+this.state.updated_at}<br/>\r\n        </p>\r\n       \r\n      </div>\r\n    }\r\n    \r\n        return( \r\n            <div>\r\n            <form>\r\n                <input ref='companyname' type='text' placeholder='companyname'></input>\r\n                <button onClick={e => this.handleSubmit(e)} >Search</button>\r\n           </form>\r\n           <p>{company}</p>        \r\n            </div>     \r\n        // <div>\r\n        //     {\r\n        //         this.state.posts.map((post)=>{\r\n        //             return <div key={post.id}>\r\n        //                 <p>{post.login}</p>\r\n        //                 <p>{post.id}</p>\r\n        //             </div>\r\n        //         })\r\n        //     }\r\n        // </div>\r\n            )\r\n    \r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Organisations;"]},"metadata":{},"sourceType":"module"}