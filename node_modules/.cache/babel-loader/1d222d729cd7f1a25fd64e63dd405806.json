{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TestReactAPI\\\\github-api\\\\src\\\\components\\\\Organisations.js\";\nimport React, { Component } from \"react\";\n\nclass Organisations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      companyname: null,\n      id: null,\n      url: null,\n      avatar_url: null,\n      description: null,\n      name: null,\n      location: null,\n      email: null,\n      public_repos: null,\n      followers: null,\n      following: null,\n      created_at: null,\n      updated_at: null\n    };\n  }\n\n  componentDidMount(companyname) {\n    fetch(\"https://api.github.com/orgs/\".concat(companyname)).then(response => response.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  } //   getCompany (companyname){\n  //     return fetch(`https://api.github.com/orgs/${companyname}`)\n  //     .then(response => response.json())\n  //     .then(response => {\n  //       console.log(response);\n  //       return response;\n  //     })\n  //   }\n  //  async handleSubmit(e){\n  //     e.preventDefault();\n  //     let company = await this.getCompany(this.refs.companyname.value);\n  //     this.setState({        \n  //       companyname:company.login,\n  //       id:company.id,\n  //       url:company.url,\n  //       avatar_url: company.avatar_url,\n  //       name:company.name,\n  //       location:company.location,\n  //       email:company.email,         \n  //       description:company.description,\n  //       followers:company.followers,\n  //       following:company.following, \n  //       created_at:company.created_at,\n  //       updated_at:company.updated_at          \n  //     })\n  //   }\n\n\n  render() {\n    //let company;\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items; // if(this.state.companyname){\n    //     company=  \n    //   <div>\n    //      <img alt=\"avatar\" src={this.state.avatar_url} width='200px'/>\n    //     <p>\n    //     {\"company: \"+this.state.name}<br/>\n    //     {\"id: \"+this.state.id}<br/>\n    //     {\"location: \"+this.state.location}<br/>\n    //     {\"email: \"+this.state.email}<br/>\n    //     {\"description: \"+this.state.description}<br/> \n    //     {\"followers: \"+this.state.followers}<br/> \n    //     {\"following: \"+this.state.following}<br/>        \n    //     {\"created_at: \"+this.state.created_at}<br/> \n    //     {\"updated_at: \"+this.state.updated_at}<br/>\n    //     </p>\n    //   </div>\n    // }\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, items.map(item => React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Name: \", item.name))));\n    }\n  }\n\n}\n\nexport default Organisations;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\TestReactAPI\\github-api\\src\\components\\Organisations.js"],"names":["React","Component","Organisations","constructor","props","state","items","isLoaded","companyname","id","url","avatar_url","description","name","location","email","public_repos","followers","following","created_at","updated_at","componentDidMount","fetch","then","response","json","setState","render","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AACA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC,EADC;AAEPC,MAAAA,QAAQ,EAAC,KAFF;AAGTC,MAAAA,WAAW,EAAC,IAHH;AAITC,MAAAA,EAAE,EAAC,IAJM;AAKTC,MAAAA,GAAG,EAAC,IALK;AAMTC,MAAAA,UAAU,EAAC,IANF;AAOTC,MAAAA,WAAW,EAAC,IAPH;AAQRC,MAAAA,IAAI,EAAC,IARG;AASRC,MAAAA,QAAQ,EAAC,IATD;AAUTC,MAAAA,KAAK,EAAC,IAVG;AAWTC,MAAAA,YAAY,EAAC,IAXJ;AAYTC,MAAAA,SAAS,EAAC,IAZD;AAaTC,MAAAA,SAAS,EAAC,IAbD;AAcTC,MAAAA,UAAU,EAAC,IAdF;AAeTC,MAAAA,UAAU,EAAC;AAfF,KAAX;AAiBD;;AACDC,EAAAA,iBAAiB,CAACb,WAAD,EAAa;AAC1Bc,IAAAA,KAAK,uCAAgCd,WAAhC,EAAL,CACCe,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACVnB,QAAAA,QAAQ,EAAC,IADC;AAEVD,QAAAA,KAAK,EAACmB;AAFI,OAAd;AAID,KAPD;AAQH,GA9B+B,CA+BlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACJE,EAAAA,MAAM,GAAE;AACJ;AADI,sBAEkB,KAAKtB,KAFvB;AAAA,QAECE,QAFD,eAECA,QAFD;AAAA,QAEWD,KAFX,eAEWA,KAFX,EAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,QAAG,CAACC,QAAJ,EAAa;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAGI;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KAAK,CAACsB,GAAN,CAAUC,IAAI,IACX;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACpB,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUoB,IAAI,CAAChB,IADf,CADH,CADL,CANC,CADJ;AAgBH;AAEA;;AArGiC;;AA0GtC,eAAeX,aAAf","sourcesContent":["import React, {Component} from \"react\";\r\nclass Organisations extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            items:[],\r\n            isLoaded:false,\r\n          companyname:null,\r\n          id:null,\r\n          url:null,\r\n          avatar_url:null,\r\n          description:null,\r\n           name:null,\r\n           location:null,\r\n          email:null,\r\n          public_repos:null,\r\n          followers:null,\r\n          following:null,\r\n          created_at:null,\r\n          updated_at:null\r\n        }\r\n      }\r\n      componentDidMount(companyname){\r\n          fetch(`https://api.github.com/orgs/${companyname}`)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            this.setState({\r\n                isLoaded:true,\r\n                items:json,\r\n            })\r\n          })\r\n      }\r\n    //   getCompany (companyname){\r\n    //     return fetch(`https://api.github.com/orgs/${companyname}`)\r\n    //     .then(response => response.json())\r\n    //     .then(response => {\r\n    //       console.log(response);\r\n    //       return response;\r\n    //     })\r\n    //   }\r\n    //  async handleSubmit(e){\r\n    //     e.preventDefault();\r\n    //     let company = await this.getCompany(this.refs.companyname.value);\r\n    //     this.setState({        \r\n    //       companyname:company.login,\r\n    //       id:company.id,\r\n    //       url:company.url,\r\n    //       avatar_url: company.avatar_url,\r\n    //       name:company.name,\r\n    //       location:company.location,\r\n    //       email:company.email,         \r\n    //       description:company.description,\r\n    //       followers:company.followers,\r\n    //       following:company.following, \r\n    //       created_at:company.created_at,\r\n    //       updated_at:company.updated_at          \r\n    \r\n    //     })\r\n    //   }\r\nrender(){\r\n    //let company;\r\n    var {isLoaded, items}=this.state;   \r\n    // if(this.state.companyname){\r\n    //     company=  \r\n    //   <div>\r\n    //      <img alt=\"avatar\" src={this.state.avatar_url} width='200px'/>\r\n    //     <p>\r\n    //     {\"company: \"+this.state.name}<br/>\r\n    //     {\"id: \"+this.state.id}<br/>\r\n    //     {\"location: \"+this.state.location}<br/>\r\n    //     {\"email: \"+this.state.email}<br/>\r\n    //     {\"description: \"+this.state.description}<br/> \r\n    //     {\"followers: \"+this.state.followers}<br/> \r\n    //     {\"following: \"+this.state.following}<br/>        \r\n    //     {\"created_at: \"+this.state.created_at}<br/> \r\n    //     {\"updated_at: \"+this.state.updated_at}<br/>\r\n    //     </p>\r\n       \r\n    //   </div>\r\n    // }\r\n    if(!isLoaded){\r\n        return <div>Loading...</div>\r\n    }\r\n    else{\r\n        return( \r\n            <div>\r\n            {/* <form>\r\n                <input ref='companyname' type='text' placeholder='companyname'></input>\r\n                <button onClick={e => this.handleSubmit(e)} >Search</button>\r\n           </form>\r\n           <p>{company}</p>  */}\r\n           <ul>\r\n               {items.map(item=>(\r\n                   <li key={item.id}>\r\n                      Name: {item.name} \r\n                   </li>\r\n               ))}\r\n           </ul>\r\n            </div>     \r\n            )\r\n    }\r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Organisations;"]},"metadata":{},"sourceType":"module"}